package it.zeze.fantaformazioneweb.entity;

// Generated 19-gen-2012 10.57.55 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Email;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Utenti generated by hbm2java
 */
@Entity
@Table(name = "utenti", catalog = "fanta_formazione")
public class Utenti implements java.io.Serializable {

	private static final long serialVersionUID = 3634415094022743512L;

	private int id;
	private String username;
	private String password;
	private String passwordRepeat;
	private String mail;
	private Date dataRegistrazione;
	private Date dataUltimoAccesso;
	private Set<UtentiFormazioni> utentiFormazionis = new HashSet<UtentiFormazioni>(0);

	public Utenti() {
	}

	public Utenti(String username, String password, String mail) {
		this.username = username;
		this.password = password;
		this.mail = mail;
	}

	public Utenti(String username, String password, String mail, Date dataRegistrazione, Date dataUltimoAccesso, Set<UtentiFormazioni> utentiFormazionis) {
		this.username = username;
		this.password = password;
		this.mail = mail;
		this.dataRegistrazione = dataRegistrazione;
		this.dataUltimoAccesso = dataUltimoAccesso;
		this.utentiFormazionis = utentiFormazionis;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "username", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Transient
	public String getPasswordRepeat() {
		return passwordRepeat;
	}

	public void setPasswordRepeat(String passwordRepeat) {
		this.passwordRepeat = passwordRepeat;
	}

	@Column(name = "mail", nullable = false, length = 200)
	@NotNull
	@Length(max = 200)
	@Email(message="Campo mail NON valido")
	public String getMail() {
		return this.mail;
	}

	public void setMail(String mail) {
		this.mail = mail;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_registrazione")
	public Date getDataRegistrazione() {
		return this.dataRegistrazione;
	}

	public void setDataRegistrazione(Date dataRegistrazione) {
		this.dataRegistrazione = dataRegistrazione;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_ultimo_accesso")
	public Date getDataUltimoAccesso() {
		return this.dataUltimoAccesso;
	}

	public void setDataUltimoAccesso(Date dataUltimoAccesso) {
		this.dataUltimoAccesso = dataUltimoAccesso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenti")
	public Set<UtentiFormazioni> getUtentiFormazionis() {
		return this.utentiFormazionis;
	}

	public void setUtentiFormazionis(Set<UtentiFormazioni> utentiFormazionis) {
		this.utentiFormazionis = utentiFormazionis;
	}

}
