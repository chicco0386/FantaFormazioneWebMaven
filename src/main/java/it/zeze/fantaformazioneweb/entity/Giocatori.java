package it.zeze.fantaformazioneweb.entity;

// Generated 19-gen-2012 10.57.55 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Giocatori generated by hbm2java
 */
@Entity
@Table(name = "giocatori", catalog = "fanta_formazione", uniqueConstraints = @UniqueConstraint(columnNames = { "id", "nome" }))
public class Giocatori implements java.io.Serializable {

	private static final long serialVersionUID = -3176983600486468328L;

	private int id;
	private Squadre squadre = new Squadre();
	private String nome;
	private String ruolo;
	private String stagione;
	private BigDecimal quotazIniziale;
	private BigDecimal quotazAttuale;
	private Set<ProbabiliFormazioniFg> probabiliFormazioniFgs = new HashSet<ProbabiliFormazioniFg>(0);
	private Set<ProbabiliFormazioniGazzetta> probabiliFormazioniGazzettas = new HashSet<ProbabiliFormazioniGazzetta>(0);
	private Set<Formazioni> formazionis = new HashSet<Formazioni>(0);
	private Set<Statistiche> statistiches = new HashSet<Statistiche>(0);
	private Set<ProbabiliFormazioni> probabiliFormazionis = new HashSet<ProbabiliFormazioni>(0);

	public Giocatori() {
	}

	public Giocatori(int id, Squadre squadre, String nome, String ruolo, String stagione, BigDecimal quotazIniziale, BigDecimal quotazAttuale) {
		this.id = id;
		this.squadre = squadre;
		this.nome = nome;
		this.ruolo = ruolo;
		this.stagione = stagione;
		this.quotazIniziale = quotazIniziale;
		this.quotazAttuale = quotazAttuale;
	}

	public Giocatori(Squadre squadre, String nome, String ruolo, Set<ProbabiliFormazioniFg> probabiliFormazioniFgs, Set<ProbabiliFormazioniGazzetta> probabiliFormazioniGazzettas, Set<Formazioni> formazionis, Set<Statistiche> statistiches, Set<ProbabiliFormazioni> probabiliFormazionis) {
		this.squadre = squadre;
		this.nome = nome;
		this.ruolo = ruolo;
		this.probabiliFormazioniFgs = probabiliFormazioniFgs;
		this.probabiliFormazioniGazzettas = probabiliFormazioniGazzettas;
		this.formazionis = formazionis;
		this.statistiches = statistiches;
		this.probabiliFormazionis = probabiliFormazionis;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_squadra", nullable = false)
	@NotNull
	public Squadre getSquadre() {
		return this.squadre;
	}

	public void setSquadre(Squadre squadre) {
		this.squadre = squadre;
	}

	@Column(name = "nome", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "ruolo", nullable = false, length = 1)
	@NotNull
	@Length(max = 1)
	public String getRuolo() {
		return this.ruolo;
	}

	public void setRuolo(String ruolo) {
		this.ruolo = ruolo;
	}

	@Column(name = "stagione", nullable = true, length = 10)
	@Length(max = 10)
	public String getStagione() {
		return stagione;
	}

	public void setStagione(String stagione) {
		this.stagione = stagione;
	}

	@Column(name = "quotaz_iniziale", nullable = true, precision = 4, scale = 2)
	public BigDecimal getQuotazIniziale() {
		return quotazIniziale;
	}

	public void setQuotazIniziale(BigDecimal quotazIniziale) {
		this.quotazIniziale = quotazIniziale;
	}

	@Column(name = "quotaz_attuale", nullable = true, precision = 4, scale = 2)
	public BigDecimal getQuotazAttuale() {
		return quotazAttuale;
	}

	public void setQuotazAttuale(BigDecimal quotazAttuale) {
		this.quotazAttuale = quotazAttuale;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giocatori")
	public Set<ProbabiliFormazioniFg> getProbabiliFormazioniFgs() {
		return this.probabiliFormazioniFgs;
	}

	public void setProbabiliFormazioniFgs(Set<ProbabiliFormazioniFg> probabiliFormazioniFgs) {
		this.probabiliFormazioniFgs = probabiliFormazioniFgs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giocatori")
	public Set<ProbabiliFormazioniGazzetta> getProbabiliFormazioniGazzettas() {
		return this.probabiliFormazioniGazzettas;
	}

	public void setProbabiliFormazioniGazzettas(Set<ProbabiliFormazioniGazzetta> probabiliFormazioniGazzettas) {
		this.probabiliFormazioniGazzettas = probabiliFormazioniGazzettas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giocatori")
	public Set<Formazioni> getFormazionis() {
		return this.formazionis;
	}

	public void setFormazionis(Set<Formazioni> formazionis) {
		this.formazionis = formazionis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giocatori")
	public Set<Statistiche> getStatistiches() {
		return this.statistiches;
	}

	public void setStatistiches(Set<Statistiche> statistiches) {
		this.statistiches = statistiches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giocatori")
	public Set<ProbabiliFormazioni> getProbabiliFormazionis() {
		return this.probabiliFormazionis;
	}

	public void setProbabiliFormazionis(Set<ProbabiliFormazioni> probabiliFormazionis) {
		this.probabiliFormazionis = probabiliFormazionis;
	}

	@Override
	public boolean equals(Object o) {
		boolean equals = false;
		if (o instanceof Giocatori) {
			Giocatori giocatoreToCompare = (Giocatori) o;
			if (giocatoreToCompare.getId() == this.id) {
				equals = true;
			}
		}
		return equals;
	}

}
